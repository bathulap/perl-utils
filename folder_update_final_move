#!/usr/bin/perl
use strict;
use warnings;
use File::Copy;
use File::Path qw(make_path);
use POSIX qw(strftime);

# Define paths (customize these paths according to your needs)
my $destination = '/path/to/destination'; # Destination directory
my $trigger_file_path = '/path/to/trigger/file'; # Trigger file
my @source_dirs = ('/path/to/data', '/path/to/extract', '/path/to/archive'); # Source directories
my $additional_file = '/path/to/additional/file'; # Additional file to move

# Get current date in %y%m%d format
my $date = strftime("%y%m%d", localtime);

# Create the main directory with current date or incremented suffix
my $main_dir = "$destination/$date";
my $suffix = 1;

while (-e $main_dir) {
    $main_dir = "$destination/${date}_$suffix";
    $suffix++;
}

make_path("$main_dir/apology");
make_path("$main_dir/non-apology");

# Read the trigger file
open(my $fh, '<', $trigger_file_path) or die "Cannot open trigger file: $!";
my $trigger = <$fh>;
chomp($trigger);
close($fh);

# Define target directory based on trigger file content
my $target_dir;
if ($trigger eq 'rename') {
    $target_dir = "$main_dir/apology";
} elsif ($trigger eq 'no-rename') {
    $target_dir = "$main_dir/non-apology";
} else {
    die "Invalid content in trigger file: $trigger";
}

# Move files from source directories to target directory
foreach my $source_dir (@source_dirs) {
    opendir(my $dir, $source_dir) or die "Cannot open directory: $!";
    while (my $file = readdir($dir)) {
        next if ($file =~ /^\./); # Skip hidden files and directories
        my $source_file = "$source_dir/$file";
        if (-f $source_file) {
            move($source_file, $target_dir) or warn "Could not move $source_file: $!";
        }
    }
    closedir($dir);
}

# Move the additional file to the target directory
if (-f $additional_file) {
    move($additional_file, $target_dir) or warn "Could not move $additional_file: $!";
}

print "Files have been moved to $target_dir based on the trigger $trigger.\n";
